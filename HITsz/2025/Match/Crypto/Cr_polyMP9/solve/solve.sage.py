

# This file was *autogenerated* from the file solve.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_1000 = Integer(1000); _sage_const_44 = Integer(44); _sage_const_35 = Integer(35); _sage_const_13 = Integer(13); _sage_const_16 = Integer(16); _sage_const_37 = Integer(37); _sage_const_7 = Integer(7); _sage_const_27 = Integer(27); _sage_const_6 = Integer(6); _sage_const_3 = Integer(3); _sage_const_41 = Integer(41); _sage_const_10 = Integer(10); _sage_const_30 = Integer(30); _sage_const_34 = Integer(34); _sage_const_1 = Integer(1); _sage_const_21 = Integer(21); _sage_const_36 = Integer(36); _sage_const_23 = Integer(23); _sage_const_31 = Integer(31); _sage_const_12 = Integer(12); _sage_const_8 = Integer(8); _sage_const_15 = Integer(15); _sage_const_22 = Integer(22); _sage_const_20 = Integer(20); _sage_const_308731512478840019192021500188099312117600705964579367042865890192129 = Integer(308731512478840019192021500188099312117600705964579367042865890192129); _sage_const_103535256104012596820109069481645949146278815116687 = Integer(103535256104012596820109069481645949146278815116687); _sage_const_769765262587437743743412206776893955152450056257880099 = Integer(769765262587437743743412206776893955152450056257880099); _sage_const_3362626105590061140526250915849648524859764288663535900421832850524999 = Integer(3362626105590061140526250915849648524859764288663535900421832850524999); _sage_const_305288597258444807348406459466423730149 = Integer(305288597258444807348406459466423730149); _sage_const_4434872080119930404252285018524163644558729501150075679450700249 = Integer(4434872080119930404252285018524163644558729501150075679450700249); _sage_const_414238590401251888028137257447963399 = Integer(414238590401251888028137257447963399); _sage_const_57447003536210365518177 = Integer(57447003536210365518177); _sage_const_277077865640167925657183290392258115885185966538221409904710972376609099 = Integer(277077865640167925657183290392258115885185966538221409904710972376609099); _sage_const_1336033137935784021339376935339573201441300679 = Integer(1336033137935784021339376935339573201441300679); _sage_const_410092096979409163593653463539647163221400262002007658681793020839 = Integer(410092096979409163593653463539647163221400262002007658681793020839); _sage_const_88838848026782746828820801777381945689254716823747172660840212750631 = Integer(88838848026782746828820801777381945689254716823747172660840212750631); _sage_const_4099 = Integer(4099); _sage_const_90822039304109887399016730740204821044943362662190285930999 = Integer(90822039304109887399016730740204821044943362662190285930999); _sage_const_1035924536678124815194542404547709851395487625551366919309316543884899 = Integer(1035924536678124815194542404547709851395487625551366919309316543884899); _sage_const_4521508826173609637724605739663017509123269602391420703935797 = Integer(4521508826173609637724605739663017509123269602391420703935797); _sage_const_1677895982937667879288707103172222986260072395533981508942588789149 = Integer(1677895982937667879288707103172222986260072395533981508942588789149); _sage_const_3335459071219510589401044386045673339241045586499 = Integer(3335459071219510589401044386045673339241045586499); _sage_const_93341820384421190678542876455076903983107 = Integer(93341820384421190678542876455076903983107); _sage_const_48188324371674837729424837468253100223974983274779469 = Integer(48188324371674837729424837468253100223974983274779469); _sage_const_669897030174876492546312948747988800952418152576466996265799 = Integer(669897030174876492546312948747988800952418152576466996265799); _sage_const_11170569041315598571711260528361116235973006489034166996259 = Integer(11170569041315598571711260528361116235973006489034166996259); _sage_const_2 = Integer(2)
from sage.modules.free_module_integer import IntegerLattice

def Babai_CVP(mat, target):
	M = IntegerLattice(mat, lll_reduce=True).reduced_basis
	G = M.gram_schmidt()[_sage_const_0 ]
	diff = target
	for i in reversed(range(G.nrows())):
		diff -=  M[i] * ((diff * G[i]) / (G[i] * G[i])).round()
	return target - diff

c = _sage_const_1000  ### Modify this
L = _sage_const_44 
points = [_sage_const_35 , _sage_const_13 , _sage_const_16 , _sage_const_37 , _sage_const_7 , _sage_const_27 , _sage_const_6 , _sage_const_3 , _sage_const_41 , _sage_const_10 , _sage_const_30 , _sage_const_34 , _sage_const_1 , _sage_const_21 , _sage_const_36 , _sage_const_23 , _sage_const_31 , _sage_const_12 , _sage_const_8 , _sage_const_15 , _sage_const_22 , _sage_const_20 ]
evaluations = [_sage_const_308731512478840019192021500188099312117600705964579367042865890192129 , _sage_const_103535256104012596820109069481645949146278815116687 , _sage_const_769765262587437743743412206776893955152450056257880099 , _sage_const_3362626105590061140526250915849648524859764288663535900421832850524999 , _sage_const_305288597258444807348406459466423730149 , _sage_const_4434872080119930404252285018524163644558729501150075679450700249 , _sage_const_414238590401251888028137257447963399 , _sage_const_57447003536210365518177 , _sage_const_277077865640167925657183290392258115885185966538221409904710972376609099 , _sage_const_1336033137935784021339376935339573201441300679 , _sage_const_410092096979409163593653463539647163221400262002007658681793020839 , _sage_const_88838848026782746828820801777381945689254716823747172660840212750631 , _sage_const_4099 , _sage_const_90822039304109887399016730740204821044943362662190285930999 , _sage_const_1035924536678124815194542404547709851395487625551366919309316543884899 , _sage_const_4521508826173609637724605739663017509123269602391420703935797 , _sage_const_1677895982937667879288707103172222986260072395533981508942588789149 , _sage_const_3335459071219510589401044386045673339241045586499 , _sage_const_93341820384421190678542876455076903983107 , _sage_const_48188324371674837729424837468253100223974983274779469 , _sage_const_669897030174876492546312948747988800952418152576466996265799 , _sage_const_11170569041315598571711260528361116235973006489034166996259 ]
M = matrix(ZZ, L, L // _sage_const_2  + L)

for i in range(L // _sage_const_2 ):
	for j in range(L):
		M[j, i] = c * points[i]**j
M[:, L // _sage_const_2 :] = matrix.identity(L)

target = vector([c * evaluations[i] for i in range(L // _sage_const_2 )] + [_sage_const_0 ] * L)

v = Babai_CVP(M, target)

flag = ''.join(chr(v[i]) for i in range(L // _sage_const_2 , L // _sage_const_2  + L))
print("HITCTF{" + flag + "}")


